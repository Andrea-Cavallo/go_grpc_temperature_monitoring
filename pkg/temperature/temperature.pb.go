// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.0--rc2
// source: protos/temperature.proto

package temperature

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Messaggio per rappresentare una lettura della temperatura
type TemperatureReading struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location    string  `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`         // Nome della cittÃ  o woeid
	Temperature float64 `protobuf:"fixed64,2,opt,name=temperature,proto3" json:"temperature,omitempty"` // Temperatura in gradi Celsius
	Timestamp   int64   `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`      // Timestamp Unix della lettura
}

func (x *TemperatureReading) Reset() {
	*x = TemperatureReading{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_temperature_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TemperatureReading) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemperatureReading) ProtoMessage() {}

func (x *TemperatureReading) ProtoReflect() protoreflect.Message {
	mi := &file_protos_temperature_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemperatureReading.ProtoReflect.Descriptor instead.
func (*TemperatureReading) Descriptor() ([]byte, []int) {
	return file_protos_temperature_proto_rawDescGZIP(), []int{0}
}

func (x *TemperatureReading) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *TemperatureReading) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *TemperatureReading) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Richiesta per ottenere la temperatura attuale in questo caso prende in ingresso solo la citta
type GetCurrentTemperatureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *GetCurrentTemperatureRequest) Reset() {
	*x = GetCurrentTemperatureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_temperature_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentTemperatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentTemperatureRequest) ProtoMessage() {}

func (x *GetCurrentTemperatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_temperature_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentTemperatureRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentTemperatureRequest) Descriptor() ([]byte, []int) {
	return file_protos_temperature_proto_rawDescGZIP(), []int{1}
}

func (x *GetCurrentTemperatureRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

// Risposta per ottenere la temperatura attuale
type GetCurrentTemperatureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reading *TemperatureReading `protobuf:"bytes,1,opt,name=reading,proto3" json:"reading,omitempty"` // Lettura della temperatura attuale
}

func (x *GetCurrentTemperatureResponse) Reset() {
	*x = GetCurrentTemperatureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_temperature_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCurrentTemperatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentTemperatureResponse) ProtoMessage() {}

func (x *GetCurrentTemperatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_temperature_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentTemperatureResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentTemperatureResponse) Descriptor() ([]byte, []int) {
	return file_protos_temperature_proto_rawDescGZIP(), []int{2}
}

func (x *GetCurrentTemperatureResponse) GetReading() *TemperatureReading {
	if x != nil {
		return x.Reading
	}
	return nil
}

var File_protos_temperature_proto protoreflect.FileDescriptor

var file_protos_temperature_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x74, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x70, 0x0a, 0x12, 0x54, 0x65, 0x6d, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b,
	0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0x3a, 0x0a, 0x1c, 0x47, 0x65, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x5a, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x72, 0x65, 0x61, 0x64, 0x69, 0x6e,
	0x67, 0x32, 0x84, 0x01, 0x0a, 0x12, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6e, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x29, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74,
	0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1e, 0x5a, 0x1c, 0x67, 0x6f, 0x5f, 0x77,
	0x69, 0x74, 0x68, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_temperature_proto_rawDescOnce sync.Once
	file_protos_temperature_proto_rawDescData = file_protos_temperature_proto_rawDesc
)

func file_protos_temperature_proto_rawDescGZIP() []byte {
	file_protos_temperature_proto_rawDescOnce.Do(func() {
		file_protos_temperature_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_temperature_proto_rawDescData)
	})
	return file_protos_temperature_proto_rawDescData
}

var file_protos_temperature_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_protos_temperature_proto_goTypes = []any{
	(*TemperatureReading)(nil),            // 0: temperature.TemperatureReading
	(*GetCurrentTemperatureRequest)(nil),  // 1: temperature.GetCurrentTemperatureRequest
	(*GetCurrentTemperatureResponse)(nil), // 2: temperature.GetCurrentTemperatureResponse
}
var file_protos_temperature_proto_depIdxs = []int32{
	0, // 0: temperature.GetCurrentTemperatureResponse.reading:type_name -> temperature.TemperatureReading
	1, // 1: temperature.TemperatureService.GetCurrentTemperature:input_type -> temperature.GetCurrentTemperatureRequest
	2, // 2: temperature.TemperatureService.GetCurrentTemperature:output_type -> temperature.GetCurrentTemperatureResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_protos_temperature_proto_init() }
func file_protos_temperature_proto_init() {
	if File_protos_temperature_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_temperature_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*TemperatureReading); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_temperature_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*GetCurrentTemperatureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_temperature_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*GetCurrentTemperatureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_temperature_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_temperature_proto_goTypes,
		DependencyIndexes: file_protos_temperature_proto_depIdxs,
		MessageInfos:      file_protos_temperature_proto_msgTypes,
	}.Build()
	File_protos_temperature_proto = out.File
	file_protos_temperature_proto_rawDesc = nil
	file_protos_temperature_proto_goTypes = nil
	file_protos_temperature_proto_depIdxs = nil
}
